name: Build and Release

on:
  release:
    types: [published]

env:
  # 这里定义你的项目名（可改）
  PROJECT_NAME: NeoJiLang

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # macOS Intel (x86_64)
          - os: macos-latest
            target: x86_64-apple-darwin
            platform_name: Mac-Intel
            ext: ""
          # macOS Apple Silicon (arm64)
          - os: macos-latest
            target: aarch64-apple-darwin
            platform_name: Mac-Apple
            ext: ""
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform_name: Linux-x86_64
            ext: ""
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            platform_name: Linux-arm64
            ext: ""
          # Windows 64-bit MSVC
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform_name: Win-64
            ext: ".exe"
          # Windows 32-bit MSVC
          - os: windows-latest
            target: i686-pc-windows-msvc
            platform_name: Win-32
            ext: ".exe"
          # Windows ARM64 MSVC
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            platform_name: Win-ARM
            ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/${{ matrix.target }}/release/${{ env.PROJECT_NAME }}${{ matrix.ext }}
          asset_name: ${{ env.PROJECT_NAME }}-${{ matrix.platform_name }}${{ matrix.ext }}
          asset_content_type: application/octet-stream
